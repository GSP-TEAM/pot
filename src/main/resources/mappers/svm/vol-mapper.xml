<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.sicc.gsp.svm.gms.svm.dao.SVMVolDAO">
<!-- 
	<select id="selectRegiNo" resultType="String">
		SELECT dbo.FN_SVM_GET_REGI_NO(#{birth_date},#{gender}) AS REGI_NO
	</select>
-->	
	<delete id="deleteInfor" parameterType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMInfoVO">
	<![CDATA[
		DELETE SVMUSERM
	]]>
		<where>
				TENANT_ID		= #{tenant_id}
				AND CP_CD		= #{cp_cd} 
				AND EMAIL_ID 	= #{email_id}
		</where>
	</delete>
	
	<select id="selectInfo" resultType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMInfoVO">
			SELECT	  
				    AD_NO
				   ,EXTRA_CD  
				   ,EXTRA_SEQ
				   ,USE_YN
				   ,EXP_LVL_CD
				   ,CASE WHEN EXTRA_CD = 'see'
							THEN (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = (SELECT MINOR_CD FROM SVMCODEM WHERE CODE_FIND = 'SPORT_EXP_LVL') AND MINOR_CD = EXP_LVL_CD)  
				   		 WHEN EXTRA_CD = 'ls'
							THEN (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = (SELECT MINOR_CD FROM SVMCODEM WHERE CODE_FIND = 'LANG_LVL_CD') AND MINOR_CD = EXP_LVL_CD)  
				   		 WHEN EXTRA_CD = 'oee'
							THEN (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = (SELECT MINOR_CD FROM SVMCODEM WHERE CODE_FIND = 'ETC_EXP_LVL') AND MINOR_CD = EXP_LVL_CD)  
						 ELSE ''
				   		 END 
					  																			   AS LEVEL_NM 
				   ,EXP_NM
				   ,EXP_CD
				   ,CASE WHEN EXTRA_CD = 'see'
							THEN (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = (SELECT MINOR_CD FROM SVMCODEM WHERE CODE_FIND = 'SPORT_EXP_NM') AND MINOR_CD = EXP_NM)  
						 ELSE ''
				   		 END 																	   AS EXP_NM
				   ,DESCRIPTION
				   ,EXP_PERIOD
--				   ,CHECK_CD
				   ,CASE WHEN EXTRA_CD = 'lc' 
				         THEN (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = (SELECT MINOR_CD FROM SVMCODEM WHERE CODE_FIND = 'AVAIL_LOCATION_CD') )  
				   		 ELSE (SELECT L2_CODE_NM FROM SVMCODEM WHERE MAJOR_CD = EXTRA_CD )
				   		 END  
				   																				   AS CHECK_NM
				--   ,SKILL_CD
--				   ,dbo.FN_GMS_CODE_NM('LANG_CD', SKILL_CD , #{1}) AS SKILL_NM
				   ,CASE WHEN EXTRA_CD = 'as' THEN (
				   								SELECT IMG_FG FROM (
				   														SELECT
				   																ROW_NUMBER() OVER (ORDER BY IMG_FG ASC) AS PHOTO_SEQ
				   															   ,IMG_FG FROM SVMPHOTOIMGD 
					                                        			WHERE  
																		       TENANT_ID = #{0}
					                                        	   		  AND  CP_CD = #{1} 
					                                        	   		  AND  AD_NO = #{2} 
			                                                  			  AND  IMG_FG LIKE '%skillPhoto%'
			                                             			) AS PHOTOM WHERE PHOTO_SEQ = EXTRA_SEQ)
--		         		ELSE CERTI_FG 
		         		ELSE '' 
			      		 END										  								AS CERTI_FG
				   
				   ,CASE WHEN EXTRA_CD = 'as' THEN (
			   									SELECT FILE_NM FROM (
																		SELECT	   
																				ROW_NUMBER() OVER ( ORDER BY IMG_FG ASC) AS PHOTO_SEQ 
																			   ,FILE_NM FROM SVMPHOTOIMGD 
																		 WHERE 
																		        TENANT_ID = #{0}
					                                        	   		   AND  CP_CD = #{1} 
					                                        	   		   AND  AD_NO = #{2} 
																		   AND  IMG_FG like '%skillPhoto%'
																	) AS PHOTOM WHERE PHOTO_SEQ = EXTRA_SEQ)
						 ELSE CERTI_FILE_NM	
						  END 
						   																			AS CERTI_NM
				  
				  FROM SVMVOLUNTEEREXTRAD
				  WHERE 1=1
						TENANT_ID = #{0}
				   AND  CP_CD = #{1} 
				   AND  AD_NO = #{2}
	</select>
	
	<select id="select" resultType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMVolVO">
		SELECT
			 VM.AD_NO
			,STATUS_FG
			,LOCAL_FAMILY_NM AS FAMILY_NM
			,LOCAL_GIVEN_NM AS GIVEN_NM
			,BIRTH_DT
			,GENDER_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'GENDER', GENDER, #{lang}) AS GENDER_NM
			,CTRY_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CTRY_CD', CTRY_CD, #{lang}) AS CTRY_NM
			,PASSPORT_NO
			,ZIP_NO
			,CURR_ADDR_DETAIL
			,JOB_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'JOB_CD', JOB_CD, #{lang}) AS OCCU_NM
			,SCHOOL_NM
			,PREFER_WORK_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'PREFER_WORK_CD', PREFER_WORK_CD, #{lang}) AS AVAIL_WORK_NM
			,PREFER_LOCATION_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'PREFER_LOCATION_CD', PREFER_LOCATION_CD, #{lang}) AS AVAIL_LOCATION_NM
			,UNI_SHIRTS_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'UNI_SHIRTS_CD', UNI_SHIRTS_CD, #{lang}) AS UNI_SHIRTS_NM
			,UNI_PANTS_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'UNI_PANTS_CD', UNI_PANTS_CD, #{lang}) AS UNI_WAIST_NM
			,UNI_SHOES_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'UNI_SHOES_CD', UNI_SHOES_CD, #{lang}) AS UNI_SHOES_NM
			,ONLINE_YN
			,MARRIED_YN
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'MARRIED', MARRIED_YN, #{lang}) AS MARRIED_NM
			,BLOOD_CD
			,ID_NO1
			,CURR_ADDR_CTRY_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CURR_ADDR_CTRY_CD', CURR_ADDR_CTRY_CD, #{lang}) AS PROVINSI_NM
			,CURR_ADDR_CITY_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CURR_ADDR_CITY_CD', CURR_ADDR_CITY_CD, #{lang}) AS CITY_NM
			,CURR_ADDR_DISTRICT_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CURR_ADDR_DISTRICT_CD', CURR_ADDR_DISTRICT_CD, #{lang}) AS DISTRICT_NM
			,CURR_ADDR_VILLAGE_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CURR_ADDR_VILLAGE_CD', CURR_ADDR_VILLAGE_CD, #{lang}) AS VILLAGE_NM
			,MOBILE_NO
			,UNIV_MAJOR_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'UNIV_MAJOR_CD', UNIV_MAJOR_CD, #{lang}) AS OCCU_OR_UNIV_CD_NM
			,WEIGHT
			,HEIGHT
			,CURR_ADDR_DETAIL
			,SNS_NM1
			,SNS_NM2
			,SNS_NM3
			,SNS_NM4
			,HOBBY_NM
			,SPECIAL_NM
			,MOTTO_DESC
			,CV_DESC
			,ELEM_SCHOOL_YEAR
			,ELEM_SCHOOL_NM
			,MIDDLE_SCHOOL_YEAR
			,MIDDLE_SCHOOL_NM
			,HIGH_SCHOOL_YEAR
			,HIGH_SCHOOL_NM
			,BD_UNIV_YEAR
			,BD_UNIV_MAJOR_NM
			,BD_UNIV_NM
			,MD_UNIV_YEAR
			,MD_UNIV_MAJOR_NM
			,MD_UNIV_NM
			,PHD_UNIV_YEAR
			,PHD_UNIV_MAJOR_NM
			,PHD_UNIV_NM
			,EMER_CONTACT_NM1
			,EMER_CONTACT_NM2
			,EMER_TEL_NO
			,EMER_RELATION_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'RELATION_CD', EMER_RELATION_CD, #{lang}) AS EMER_REL_NM
			,PREFER_WORK_DESC
			,EMAIL_ID
			,ZIP_NO
			,MESSENGER_NO
			,NICK_NM
			,NATL_CD
			,UNIV_MAJOR_CD
			,GRAD_STAT_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'UNIV_MAJOR_CD', UNIV_MAJOR_CD, #{lang}) AS OCCU_OR_UNIV_MAJOR_NM
			,GRAD_STAT_CD
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'GRAD_STAT_CD',GRAD_STAT_CD,#{lang}) AS OCCU_OR_UNIV_ST_MAJOR_NM
			,GROUP_NM
			,MOBILE_CTRY_NO
			,(SELECT
					SAVE_TAB_ID
				FROM SVMUSERM
				WHERE 1=1
				  AND TENANT_ID	= #{tenant_id}
				  AND CP_CD	= #{cp_cd} 
				  AND EMAIL_ID 	= #{email_id}
			 )
			AS SAVE_TAB_CD
			,PP.FILE_NM AS PASSPORTFILE_NM
			,PP.PHOTO_IMG AS PASSPORTFILE_CD
			,FP.FILE_NM	AS FACEPHOTO_NM
			,FP.PHOTO_IMG AS FACEPHOTO_CD
			,FP.THUMNAIL AS FACEPHOTO_THUMNAIL
			,BP.FILE_NM AS BODYPHOTO_NM
			,BP.PHOTO_IMG AS BODYPHOTO_CD
			,BP.THUMNAIL AS BODYPHOTO_THUMNAIL
			,FOREIGNER_YN
			,FN_GMS_SVM_CODE_NM(#{tenant_id},'CTRY_CD_FG', CTRY_CD_FG, #{lang}) AS CTRY_CD_FG_NM
		FROM SVMVOLUNTEERM VM
		LEFT JOIN SVMPHOTOIMGD PP
			ON VM.AD_NO = PP.AD_NO
		   AND PP.IMG_FG = 'passport'
		LEFT JOIN SVMPHOTOIMGD FP
			ON VM.AD_NO = FP.AD_NO
		   AND FP.IMG_FG = 'facePhoto'
		LEFT JOIN SVMPHOTOIMGD BP
			ON VM.AD_NO = BP.AD_NO
		   AND BP.IMG_FG = 'bodyPhoto'
		WHERE VM.AD_NO = #{ad_no}
	</select>
	
	<insert id="insert" parameterType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMVolVO" useGeneratedKeys="true">
		<![CDATA[
			INSERT INTO SVMVOLUNTEERM
			           (
			            TENANT_ID, CP_CD, AD_NO, STATUS_FG, GROUP_NM, VOL_TYPE_CD, PREFER_DUTY_CD, 
			            LOCAL_FAMILY_NM, LOCAL_GIVEN_NM, FAMILY_NM, GIVEN_NM, NICK_NM, 
			            BIRTH_DT, GENDER_CD, NATL_CD, PASSPORT_NO, MARRIED_YN, BLOOD_CD, 
			            FOREIGNER_YN, ID_NO1, ID_NO2, ID_NO3, ADDR_CTRY_CD, ADDR_CITY_CD, 
			            ADDR_DISTRICT_CD, ADDR_VILLAGE_CD, ADDR_DETAIL, CURR_ADDR_CTRY_CD, 
			            CURR_ADDR_CITY_CD, CURR_ADDR_DISTRICT_CD, CURR_ADDR_VILLAGE_CD, 
			            CURR_ADDR_DETAIL, ZIP_NO, MOBILE_CTRY_NO, MOBILE_NO, MESSENGER_NO, 
			            EMAIL_ID, JOB_FG, JOB_CD, CORP_NM, SCHOOL_NM, UNIV_MAJOR_CD, 
			            GRAD_STAT_CD, UNI_SHIRTS_CD, UNI_PANTS_CD, UNI_CAP_CD, UNI_SHOES_CD, 
			            DEPT_TARGET_YN, DEPT_CD, HEIGHT, WEIGHT, SNS_NM1, SNS_NM2, SNS_NM3, 
			            SNS_NM4, HOBBY_NM, SPECIAL_NM, MOTTO_DESC, CV_DESC, ELEM_SCHOOL_YEAR, 
			            ELEM_SCHOOL_NM, MIDDLE_SCHOOL_YEAR, MIDDLE_SCHOOL_NM, HIGH_SCHOOL_YEAR, 
			            HIGH_SCHOOL_NM, BD_UNIV_YEAR, BD_UNIV_MAJOR_NM, BD_UNIV_NM, MD_UNIV_YEAR, 
			            MD_UNIV_MAJOR_NM, MD_UNIV_NM, PHD_UNIV_YEAR, PHD_UNIV_MAJOR_NM, 
			            PHD_UNIV_NM, EMER_CONTACT_NM1, EMER_CONTACT_NM2, EMER_TEL_NO, 
			            EMER_RELATION_CD, PREFER_LOCATION_CD, PREFER_WORK_CD, PREFER_WORK_DESC, 
			            BANK_CD, BANK_ACC_NO, ONLINE_YN, TERMS_AGREE_YN, CTRY_CD, CRT_DATE, 
			            CRT_ID, CRT_IP
			           )
			     VALUES
			           (
			            #{tenant_id}, #{cp_cd}, FN_SVM_GET_AD_NO(#{tenant_id}, #{cp_cd},'V'), #{status_fg}, #{group_nm}, #{vol_type_cd}, #{prefer_duty_cd}, 
			            #{local_family_nm}, #{local_given_nm}, #{family_nm}, #{given_nm}, #{nick_nm}, 
			            #{birth_dt}, #{gender_cd}, #{natl_cd}, #{passport_no}, #{married_yn}, #{blood_cd}, 
			            #{foreigner_yn}, #{id_no1}, #{id_no2}, #{id_no3}, #{addr_ctry_cd}, #{addr_city_cd}, 
			            #{addr_district_cd}, #{addr_village_cd}, #{addr_detail}, #{curr_addr_ctry_cd}, 
			            #{curr_addr_city_cd}, #{curr_addr_district_cd}, #{curr_addr_village_cd}, 
			            #{curr_addr_detail}, #{zip_no}, #{mobile_ctry_no}, #{mobile_no}, #{messenger_no}, 
			            #{email_id}, #{job_fg}, #{job_cd}, #{corp_nm}, #{school_nm}, #{univ_major_cd}, 
			            #{grad_stat_cd}, #{uni_shirts_cd}, #{uni_pants_cd}, #{uni_cap_cd}, #{uni_shoes_cd}, 
			            #{dept_target_yn}, #{dept_cd}, #{height}, #{weight}, #{sns_nm1}, #{sns_nm2}, #{sns_nm3}, 
			            #{sns_nm4}, #{hobby_nm}, #{special_nm}, #{motto_desc}, #{cv_desc}, #{elem_school_year}, 
			            #{elem_school_nm}, #{middle_school_year}, #{middle_school_nm}, #{high_school_year}, 
			            #{high_school_nm}, #{bd_univ_year}, #{bd_univ_major_nm}, #{bd_univ_nm}, #{md_univ_year}, 
			            #{md_univ_major_nm}, #{md_univ_nm}, #{phd_univ_year}, #{phd_univ_major_nm}, 
			            #{phd_univ_nm}, #{emer_contact_nm1}, #{emer_contact_nm2}, #{emer_tel_no}, 
			            #{emer_relation_cd}, #{prefer_location_cd}, #{prefer_work_cd}, #{prefer_work_desc}, 
			            #{bank_cd}, #{bank_acc_no}, #{online_yn}, #{terms_agree_yn}, #{ctry_cd}, NOW(), 
			            #{crt_id}, #{crt_ip}
					]]>
					<![CDATA[
					)
					]]>
<!-- 	
		<selectKey keyColumn="AD_NO" keyProperty="ad_no" order="AFTER" resultType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMVolVO">
				SELECT CONVERT(VARCHAR,AD_NO) AS AD_NO FROM SVMVOLUNTEERM WHERE REGI_NO =  #{regi_no}
		</selectKey>
-->
	</insert>
	
	<insert id="insertInfor" parameterType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMVolVO">
	           WITH t AS
				(
				<foreach collection="areaList" item="data" index="index" open="" separator="" close="">
					<if test="index != 0">
						UNION ALL
					</if>
						SELECT
						    isNull(#{tenant_id},'') AS TENANT_ID 
						   ,isNull(#{cp_cd},'') AS CP_CD 
						   ,isNull(#{ad_no},'') AS AD_NO 
						   ,isNull(#{data.extra_cd},'') AS EXTRA_CD 
				           ,isNull(#{data.exp_lvl_cd},'') AS EXP_LVL_CD
				           ,isNull(#{data.exp_cd},'') AS EXP_CD
				           ,isNull(#{data.exp_nm},'') AS EXP_NM
				           ,isNull(#{data.exp_period},'') AS EXP_PERIOD
				           ,isNull(#{data.description},'') AS DESCRIPTION
				           ,isNull(#{data.lang_cd},'') AS LANG_CD
				           ,isNull(#{data.lang_lvl_cd},'') AS LANG_LVL_CD
				           ,isNull(#{data.skill_nm},'') AS SKILL_NM
				           ,isNull(#{data.certi_file_nm},'') AS CERTI_FILE_NM
				           ,isNull(#{data.use_yn},'') AS USE_YN

				           ,now() AS CRT_DATE                                                    	
						   ,isNull(#{username},'') AS CRT_ID
						   <choose>
						   <when test="user_ip == null">
							   ,isNull('','') AS CRT_IP
						   </when>
						   <otherwise>
							   ,isNull(#{user_ip},'') AS CRT_IP
						   </otherwise>
						   </choose>
						   ,isNull(GETDATE(),'') AS UDT_DATE
						   ,isNull(#{username},'') AS UDT_ID
						   <choose>
						   <when test="user_ip == null">
							   ,isNull('','') AS UDT_IP
						   </when>
						   <otherwise>
							   ,isNull(#{user_ip},'') AS UDT_IP
						   </otherwise>
						   </choose>
				</foreach>
				)
				INSERT INTO SVMVOLUNTEEREXTRAD
		           ( EXTRA_SEQ
				   , TENANT_ID
				   , CP_CD
				   , AD_NO
				   , EXTRA_CD
				   , EXP_LVL_CD
				   , EXP_CD
				   , EXP_NM
				   , EXP_PERIOD
				   , DESCRIPTION
				   , LANG_CD
				   , LANG_LVL_CD
				   , SKILL_NM
				   , CERTI_FILE_NM
				   , USE_YN
				   , CRT_DATE
				   , CRT_ID
				   , CRT_IP
				   , UDT_DATE
				   , UDT_ID
				   , UDT_IP		           
				   )
				SELECT ROW_NUMBER() OVER (PARTITION BY AREA ORDER BY AREA) AS EXTRA_SEQ ,* FROM t
	</insert>
	
	
	<update id="update" parameterType="kr.co.sicc.gsp.svm.gms.svm.vo.SVMVolVO">          
			UPDATE SVMVOLUNTEERM
			<set> 
					, UDT_DATE              = now()
					, UDT_ID                = #{udt_id}
					, UDT_IP                = #{udt_ip}
				  <if test="status_fg != null and status_fg != '' ">       
					, STATUS_FG             = #{status_fg}
			   	  </if>

				  <if test="group_nm != null and group_nm != '' ">       
				  , GROUP_NM              = #{group_nm}
			   	  </if>

				  <if test="prefer_duty_cd != null and prefer_duty_cd != '' ">       
				  , PREFER_DUTY_CD        = #{prefer_duty_cd}
			   	  </if>

				  <if test="local_family_nm != null and local_family_nm != '' ">       
				  , LOCAL_FAMILY_NM       = #{local_family_nm}
			   	  </if>

				  <if test="local_given_nm != null and local_given_nm != '' ">       
				  , LOCAL_GIVEN_NM        = #{local_given_nm}
			   	  </if>

				  <if test="family_nm != null and family_nm != '' ">       
				  , FAMILY_NM             = #{family_nm}
			   	  </if>

				  <if test="given_nm != null and given_nm != '' ">       
				  , GIVEN_NM              = #{given_nm}
			   	  </if>

				  <if test="nick_nm != null and nick_nm != '' ">       
				  , NICK_NM               = #{nick_nm}
			   	  </if>

				  <if test="birth_dt != null and birth_dt != '' ">       
				  , BIRTH_DT              = #{birth_dt}
			   	  </if>

				  <if test="gender_cd != null and gender_cd != '' ">       
				  , GENDER_CD             = #{gender_cd}
			   	  </if>

				  <if test="natl_cd != null and natl_cd != '' ">       
				  , NATL_CD               = #{natl_cd}
			   	  </if>

				  <if test="passport_no != null and passport_no != '' ">       
				  , PASSPORT_NO           = #{passport_no}
			   	  </if>

				  <if test="married_yn != null and married_yn != '' ">       
				  , MARRIED_YN            = #{married_yn}
			   	  </if>

				  <if test="blood_cd != null and blood_cd != '' ">       
				  , BLOOD_CD              = #{blood_cd}
			   	  </if>

				  <if test="foreigner_yn != null and foreigner_yn != '' ">       
				  , FOREIGNER_YN          = #{foreigner_yn}
			   	  </if>

				  <if test="id_no1 != null and id_no1 != '' ">       
				  , ID_NO1                = #{id_no1}
			   	  </if>

				  <if test="id_no2 != null and id_no2 != '' ">       
				  , ID_NO2                = #{id_no2}
			   	  </if>

				  <if test="id_no3 != null and id_no3 != '' ">       
				  , ID_NO3                = #{id_no3}
			   	  </if>

				  <if test="addr_ctry_cd != null and addr_ctry_cd != '' ">       
				  , ADDR_CTRY_CD          = #{addr_ctry_cd}
			   	  </if>

				  <if test="addr_city_cd != null and addr_city_cd != '' ">       
				  , ADDR_CITY_CD          = #{addr_city_cd}
			   	  </if>

				  <if test="addr_district_cd != null and addr_district_cd != '' ">       
				  , ADDR_DISTRICT_CD      = #{addr_district_cd}
			   	  </if>

				  <if test="addr_village_cd != null and addr_village_cd != '' ">       
				  , ADDR_VILLAGE_CD       = #{addr_village_cd}
			   	  </if>

				  <if test="addr_detail != null and addr_detail != '' ">       
				  , ADDR_DETAIL           = #{addr_detail}
			   	  </if>

				  <if test="curr_addr_ctry_cd != null and curr_addr_ctry_cd != '' ">       
				  , CURR_ADDR_CTRY_CD     = #{curr_addr_ctry_cd}
			   	  </if>

				  <if test="curr_addr_city_cd != null and curr_addr_city_cd != '' ">       
				  , CURR_ADDR_CITY_CD     = #{curr_addr_city_cd}
			   	  </if>

				  <if test="curr_addr_district_cd != null and curr_addr_district_cd != '' ">       
				  , CURR_ADDR_DISTRICT_CD = #{curr_addr_district_cd}
			   	  </if>

				  <if test="curr_addr_village_cd != null and curr_addr_village_cd != '' ">       
				  , CURR_ADDR_VILLAGE_CD  = #{curr_addr_village_cd}
			   	  </if>

				  <if test="curr_addr_detail != null and curr_addr_detail != '' ">       
				  , CURR_ADDR_DETAIL      = #{curr_addr_detail}
			   	  </if>

				  <if test="zip_no != null and zip_no != '' ">       
				  , ZIP_NO                = #{zip_no}
			   	  </if>

				  <if test="mobile_ctry_no != null and mobile_ctry_no != '' ">       
				  , MOBILE_CTRY_NO        = #{mobile_ctry_no}
			   	  </if>

				  <if test="mobile_no != null and mobile_no != '' ">       
				  , MOBILE_NO             = #{mobile_no}
			   	  </if>

				  <if test="messenger_no != null and messenger_no != '' ">       
				  , MESSENGER_NO          = #{messenger_no}
			   	  </if>

				  <if test="email_id != null and email_id != '' ">       
				  , EMAIL_ID              = #{email_id}
			   	  </if>

				  <if test="job_fg != null and job_fg != '' ">       
				  , JOB_FG                = #{job_fg}
			   	  </if>

				  <if test="job_cd != null and job_cd != '' ">       
				  , JOB_CD                = #{job_cd}
			   	  </if>

				  <if test="corp_nm != null and corp_nm != '' ">       
				  , CORP_NM               = #{corp_nm}
			   	  </if>

				  <if test="school_nm != null and school_nm != '' ">       
				  , SCHOOL_NM             = #{school_nm}
			   	  </if>

				  <if test="univ_major_cd != null and univ_major_cd != '' ">       
				  , UNIV_MAJOR_CD         = #{univ_major_cd}
			   	  </if>

				  <if test="grad_stat_cd != null and grad_stat_cd != '' ">       
				  , GRAD_STAT_CD          = #{grad_stat_cd}
			   	  </if>

				  <if test="uni_shirts_cd != null and uni_shirts_cd != '' ">       
				  , UNI_SHIRTS_CD         = #{uni_shirts_cd}
			   	  </if>

				  <if test="uni_pants_cd != null and uni_pants_cd != '' ">       
				  , UNI_PANTS_CD          = #{uni_pants_cd}
			   	  </if>

				  <if test="uni_cap_cd != null and uni_cap_cd != '' ">       
				  , UNI_CAP_CD            = #{uni_cap_cd}
			   	  </if>

				  <if test="uni_shoes_cd != null and uni_shoes_cd != '' ">       
				  , UNI_SHOES_CD          = #{uni_shoes_cd}
			   	  </if>

				  <if test="dept_target_yn != null and dept_target_yn != '' ">       
				  , DEPT_TARGET_YN        = #{dept_target_yn}
			   	  </if>

				  <if test="dept_cd != null and dept_cd != '' ">       
				  , DEPT_CD               = #{dept_cd}
			   	  </if>

				  <if test="height != null and height != '' ">       
				  , HEIGHT                = #{height}
			   	  </if>

				  <if test="weight != null and weight != '' ">       
				  , WEIGHT                = #{weight}
			   	  </if>

				  <if test="sns_nm1 != null and sns_nm1 != '' ">       
				  , SNS_NM1               = #{sns_nm1}
			   	  </if>

				  <if test="sns_nm2 != null and sns_nm2 != '' ">       
				  , SNS_NM2               = #{sns_nm2}
			   	  </if>

				  <if test="sns_nm3 != null and sns_nm3 != '' ">       
				  , SNS_NM3               = #{sns_nm3}
			   	  </if>

				  <if test="sns_nm4 != null and sns_nm4 != '' ">       
				  , SNS_NM4               = #{sns_nm4}
			   	  </if>

				  <if test="hobby_nm != null and hobby_nm != '' ">       
				  , HOBBY_NM              = #{hobby_nm}
			   	  </if>

				  <if test="special_nm != null and special_nm != '' ">       
				  , SPECIAL_NM            = #{special_nm}
			   	  </if>

				  <if test="motto_desc != null and motto_desc != '' ">       
				  , MOTTO_DESC            = #{motto_desc}
			   	  </if>

				  <if test="cv_desc != null and cv_desc != '' ">       
				  , CV_DESC               = #{cv_desc}
			   	  </if>

				  <if test="elem_school_year != null and elem_school_year != '' ">       
				  , ELEM_SCHOOL_YEAR      = #{elem_school_year}
			   	  </if>

				  <if test="elem_school_nm != null and elem_school_nm != '' ">       
				  , ELEM_SCHOOL_NM        = #{elem_school_nm}
			   	  </if>

				  <if test="middle_school_year != null and middle_school_year != '' ">       
				  , MIDDLE_SCHOOL_YEAR    = #{middle_school_year}
			   	  </if>

				  <if test="middle_school_nm != null and middle_school_nm != '' ">       
				  , MIDDLE_SCHOOL_NM      = #{middle_school_nm}
			   	  </if>

				  <if test="high_school_year != null and high_school_year != '' ">       
				  , HIGH_SCHOOL_YEAR      = #{high_school_year}
			   	  </if>

				  <if test="high_school_nm != null and high_school_nm != '' ">       
				  , HIGH_SCHOOL_NM        = #{high_school_nm}
			   	  </if>

				  <if test="bd_univ_year != null and bd_univ_year != '' ">       
				  , BD_UNIV_YEAR          = #{bd_univ_year}
			   	  </if>

				  <if test="bd_univ_major_nm != null and bd_univ_major_nm != '' ">       
				  , BD_UNIV_MAJOR_NM      = #{bd_univ_major_nm}
			   	  </if>

				  <if test="bd_univ_nm != null and bd_univ_nm != '' ">       
				  , BD_UNIV_NM            = #{bd_univ_nm}
			   	  </if>

				  <if test="md_univ_year != null and md_univ_year != '' ">       
				  , MD_UNIV_YEAR          = #{md_univ_year}
			   	  </if>

				  <if test="md_univ_major_nm != null and md_univ_major_nm != '' ">       
				  , MD_UNIV_MAJOR_NM      = #{md_univ_major_nm}
			   	  </if>

				  <if test="md_univ_nm != null and md_univ_nm != '' ">       
				  , MD_UNIV_NM            = #{md_univ_nm}
			   	  </if>

				  <if test="phd_univ_year != null and phd_univ_year != '' ">       
				  , PHD_UNIV_YEAR         = #{phd_univ_year}
			   	  </if>

				  <if test="phd_univ_major_nm != null and phd_univ_major_nm != '' ">       
				  , PHD_UNIV_MAJOR_NM     = #{phd_univ_major_nm}
			   	  </if>

				  <if test="phd_univ_nm != null and phd_univ_nm != '' ">       
				  , PHD_UNIV_NM           = #{phd_univ_nm}
			   	  </if>

				  <if test="emer_contact_nm1 != null and emer_contact_nm1 != '' ">       
				  , EMER_CONTACT_NM1      = #{emer_contact_nm1}
			   	  </if>

				  <if test="emer_contact_nm2 != null and emer_contact_nm2 != '' ">       
				  , EMER_CONTACT_NM2      = #{emer_contact_nm2}
			   	  </if>

				  <if test="emer_tel_no != null and emer_tel_no != '' ">       
				  , EMER_TEL_NO           = #{emer_tel_no}
			   	  </if>

				  <if test="emer_relation_cd != null and emer_relation_cd != '' ">       
				  , EMER_RELATION_CD      = #{emer_relation_cd}
			   	  </if>

				  <if test="prefer_location_cd != null and prefer_location_cd != '' ">       
				  , PREFER_LOCATION_CD    = #{prefer_location_cd}
			   	  </if>

				  <if test="prefer_work_cd != null and prefer_work_cd != '' ">       
				  , PREFER_WORK_CD        = #{prefer_work_cd}
			   	  </if>

				  <if test="prefer_work_desc != null and prefer_work_desc != '' ">       
				  , PREFER_WORK_DESC      = #{prefer_work_desc}
			   	  </if>

				  <if test="bank_cd != null and bank_cd != '' ">       
				  , BANK_CD               = #{bank_cd}
			   	  </if>

				  <if test="bank_acc_no != null and bank_acc_no != '' ">       
				  , BANK_ACC_NO           = #{bank_acc_no}
			   	  </if>

				  <if test="online_yn != null and online_yn != '' ">       
				  , ONLINE_YN             = #{online_yn}
			   	  </if>

				  <if test="terms_agree_yn != null and terms_agree_yn != '' ">       
				  , TERMS_AGREE_YN        = #{terms_agree_yn}
			   	  </if>

				  <if test="ctry_cd != null and ctry_cd != '' ">       
				  , CTRY_CD               = #{ctry_cd}
			   	  </if>
			</set>              
				 WHERE
				   TENANT_ID = #{tenant_id}
				   AND CP_CD = #{cp_cd}				 
				   AND AD_NO = #{ad_no}
	</update>                                                              
</mapper>